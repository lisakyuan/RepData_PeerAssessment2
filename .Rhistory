plot(myx, myy,type="1", ylim=c(-3, 3))
plot(myx, myy,type="l", ylim=c(-3, 3))
ggplot(testdat, aes(x=myx, y=myy))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line(ylim=c(-3, 3))
g+geom_line + ylim(-3, 3)
g+geom_line() + ylim(-3, 3)
g+geom_line() + coord_cartesian(ylim=c(-3, 3))
g <- ggplot(mpg, aes(x=displ, y=hwy, aes(color=factor(year))))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(dry~cyl, margin=TRUE)
g+geom_point()+facet_grid(dry~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape = cut)
qplot(carat, price, data=diamonds, color = cut)
qplot(carat, price, data=diamonds, color = cut, geom=c("point", "smooth"), method="lm")
qplot(carat, price, data=diamonds, color = cut, geom=c("point", "smooth"), method="lm", facets=.~cut)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g+geom_points(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd, ]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot() + facet_grid(.~cut)
bye()
?lattice
library(datasets)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(datasets); data(ChickWeight); library(reshape2)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1:2)] <- paste("time", names(wideCW)[-(1:2)], sep = "")
library(dplyr)
wideCW <- mutate(wideCW, gain=time21-time0)
ls()
head(ChickWeight)
head(WideCW)
head(wideCW)
source('~/R/Coursera/Exploratory/swirlPractice.R', echo=TRUE)
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
sd(difference)
s <- sd(difference)
mn + c(-1, 1) * 0.975 * s/sqrt(10)
mn+c(-1,1)*qt(.975, 9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- 7*15.34^2 + 20*18.23^2
ns <- 7+20
sp <- sqrt(sp/ns)
(132.86-127.44)+c(-1, 1)*qt(0.975, ns)*sp*sqrt(1/8 + 1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <- (var(g1) + var(g2))/18
sp <- sqrt(9*var(g1)+9*var(g2))/18
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)$conf.
t.test(g2, g1, paired=FALSE, var.equal=TRUE)$conf
t.test(g2, g1, paired=TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)^2/(8-1) + (18.23^2)/21)^2/(21-1)
den <- (15.34^2/8)^2/(8-1) + (18.23^2/21)^2/(21-1)
mydf <- num/den
(132.86-127.44)+c(-1,1)*qt(.975, mydf)*(15.34^2/7+18.23^2/20)
(132.86-127.44)+c(-1,1)*qt(.975, mydf)*sqrt(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
1
2
2/(10/sqrt(16))
15
qt(0.95, 15)
dim(fs)
t.test(fs$sheight -fs$fheight)
11.7885 *sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=1, col="red")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=clos1, pch=9, cex=2, lwd=2)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x, y, col=kmObj$cluster, phc=19, cex=2)
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$center, col=c("black","red","green"), pch=3, cex=3, lwd=3)
points(kmObj$center,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[, 1:2]
svd2$d
subdata <- InsectSprays[InsectSprays$spray %in% c("B", "C"),]
dim(subdata)
y <- subdata$count
y
group <- as.character(subdata$spray)
group
testStat <- function(w, g) mean(w[g == "B"]) -mean(w[g == "C"])
observedStat <- testStat(y, group)
permutations <- sapply(1:10000, function(i) testStat(y, sample(group)))
observedStat
library(swirl)
rm(list=ls())
install_from_swirl("Statistical Inference")
swirl()
1*1/6 + 2*1/6 + 3* 1/6+ 4*1/6 + 5*1/6 + 6*1/6
print(g2)
head(sh)
ng
nh
median(resampledMedians)
median(sh)
sample(fh, size=nh*B, replace=TRUE)
sam <- sample(fh, size=nh*B, replace=TRUE)
resam <- matrix(sam, row=B, col=nh)
resam <- matrix(sam)
resame <- matrix(sam, B, nh)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, fun=median)
meds <- apply(resam, 1, FUN=median)
medidan(fh) - meds
meds - median(meds)
median(fh)-median(meds)
sd(meds)
sd(resampleMedians)
sd(resampledMedians)
quantile(resampledMedians, c(.25, .975))
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(gourp)))
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts, group)
perms <- sapply(1:10000, function(i) testStat(DEconunts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
library(datasets)
data(mtcars)
head(mpg)
head(mtcars)
avgMpg <- mean(mtcars$mpg)
avgMpg
attach(mtcars)
mean(mpg)
t.test(mpg)
t.test(mpg)$conf.int
round(t.test(mpg)$conf.int)
s <- sd(mpg)
z <- qnorm(.05)
mu0 <- mean(mpg) - z*s/sqrt(nrow(mtcars))
mu0
m4 <- mean(subset(mtcars[cyl==4])$mpg)
c4 =mtcars$mpg[mtcars$cyl == 4]
c6 = mtcars$mpg[mtcars$cyl == 6]
t.test(c4,c6, Var.equal=TRUE)
n < 100
n <- 100
mu <- 3.0
sd <- 1.1
mu + c(-1,1)*qnorm(.975)*(sd/sqrt(n))
pbinom(54, size=100, prob = .05, lower.tail = FALSE)
pbinom(54, size=100, prob = .5, lower.tail = FALSE)
ppois(15800-1, lambda = 520*30)
ppois(15800-1, lambda = 520*30, lower.tail = FALSE)
mu1 <= 10
mu1 <- 10
mu2<- 11
dif = 10-11
sp <- 4
se <- 4 * sqrt(1/100 + 1/100)
z <- (dif-0)/se
z
pnorm(z)
2*pnorm(z)
10 + 1.645 * 4/10
pnorm(10.658, mean=11, sd = 4, lower.tail=FALSE)
pnorm(10.658, mean=11, sd = .4, lower.tail=FALSE)
mu <- 0.01
sd <- 0.04
1.645 * 0.04
n  = 10
pnorm(0.0658/sqrt(n), mean = 0.04, sd = 0.04/sqrt(n), lower.tail = FALSE)
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 1000
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 500
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 250
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 250
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 100
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 98
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 99
pnorm(0.0658/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
head(mtcars)
library dplyr
library(dplyr)
c6 <- mtcars %>% filter (cyl == 6)
c8 <- mtcars %>% filter (cyl == 8)
t.test(c6$mpg, c8$mpg, var.equal=TRUE)
2 * pnorm(-4.419)
mn6 <- mean(c6$mpg)
mn8 <- mean(c8$mpg)
sd6 <- sd(c6$mpg)
sd8 <- sd(c8$mpg)
n6 <- nrow(c6)
n8 <- nrow(c8)
n6 <- length(c6)
n8 <- length(c8)
sp <- sqrt(((n6-1) * sd6^2 + (n8-1) * sd8^2)/(n6 + n8 -2))
c6
length(c6$mpg)
n6 <- length(c6$mpg)
n8 <- length(c8$mpg)
sp <- sqrt(((n6-1) * sd6^2 + (n8-1) * sd8^2)/(n6 + n8 -2))
length(c8)
length(c8$mpg)
c8
sp
ts <- (mn6 - mn8)/(sp*sqrt(1/n1+1/n2))
ts <- (mn6 - mn8)/(sp*sqrt(1/n6+1/n8))
ts
mn1 <- mean(140, 138, 150, 148, 135)
mn2 <- mean(132, 135, 151, 146, 130)
base <- 132, 135, 151, 146, 130
base <- c(132, 135, 151, 146, 130)
base <- c(140, 138, 150, 148, 135)
week2 <- c(132, 135, 151, 146, 130)
t.test(base, week2, mu = mn1, paired=TRUE)
t.test(base, week2, mu = mn1, paired=TRUE,var.equal=T, alt="two.sided")
t.test(base, week2, paired=TRUE,var.equal=T, alt="two.sided")$p,value
t.test(base, week2, paired=TRUE,var.equal=T, alt="two.sided")$p.value
n <- 9
mn <- 1100
sd <- 30
t <- qt((1-0.05)/2, n-1)
mu + c(-1,1)*t*sd/sqrt(n)
mn + c(-1,1)*t*sd/sqrt(n)
t <- qt(1-0.05/2, n-1)
mn + c(-1,1)*t*sd/sqrt(n)
pbinom(2, size=4, prob = .5, lower.tail=F)
ppois(10, 1/100*1787)
n1 <- 9
n2 <- 9
mn_t <- -3
mn_p <- 1.8
mn_p <- 1
sd_t <- 1.5
sd_p <- 1.8
sp <- ((n1-1) * sd_t^2 + (n2-1)*sd_p^2)/(n1+n2-2)
sp
ts <- (mn_t-mn_p)/sp*sqrt(1/n1+1/n2)
tx
ts
qnorm(ts)
pnorm(ts)
p <- 2*pt(ts, df = 16)
p
sp <- (n1 * sd_t^2 + n2*sd_p^2)/(n1+n2-2)
ts <- (mn_t - mn_p)/sqrt(sp/n1 + sp/n2)
ts
p <- 2*pt(ts, df = 16)
p
n <- 100
mn1 <- 0.01
sd <- 0.04
power.t.test(n, delta=mn1, sd=sd, type="one.sample", alt="one.sided")$power
power <- 0.9
power.t.test(power=power, delta=mn1, sd=sd, type="one.sample", alt="one.sided")$n
getwd()
install.packages("gapminder")
library(gapminder)
library(dplyr)
gapminder
library(ggplot2)
ggplot(gapminder, aes(year, lifeExp)) + geom_line(aes(group=country))
dim(gapminder)
by_country <- gapminder %>% group_by(continent, country) %>% nest()
install.packages("tidyr")
by_country <- gapminder %>% group_by(continent, country) %>% nest()
?tidyr
library(tidyr)
by_country <- gapminder %>% group_by(continent, country) %>% nest()
by_country
install.packages(c("curl", "devtools", "effects", "ggplot2", "httr", "knitr", "maptools", "memisc", "memoise", "mgcv", "multcomp", "mvtnorm", "pbkrtest", "phangorn", "R6", "RcppArmadillo", "RcppEigen", "RMySQL", "rstudioapi", "sp", "TH.data", "tidyr", "xtable"))
install.packages(c("curl", "devtools", "effects", "ggplot2",
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages(c("curl", "devtools", "effects", "httr", "knitr", "maptools", "memisc", "memoise", "mgcv", "multcomp", "mvtnorm", "pbkrtest", "phangorn", "R6", "RcppArmadillo", "RcppEigen", "RMySQL", "rstudioapi", "sp", "TH.data", "tidyr", "xtable"))
install.packages(c("curl", "devtools", "effects", "httr", "knitr",
install.packages("devtools")
getwd()
cd "./version-control/RepData_PeerAssessment1"
setwd("./version-control/RepData_PeerAssessment1")
getwd()
setwd("C:/Users/Lisa/version-control/RepData_PeerAssessment1")
source('C:/Users/Lisa/version-control/RepData_PeerAssessment1/activity.R', echo=TRUE)
ggplot(data=activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M", tz="UTC"), steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M",tz="UTC"), breaks = date_breaks("2 hour")) +
scale_y_continuous("Average Steps Taken")
ggplot(data=activity_new_interval, aes(strptime(sprintf("%04d", interval), format="%H%M", tz="EST"), steps, color =daytype)) +
geom_line() +
facet_wrap(~daytype, ncol=1) +
xlab("Hour of Day") +
ggtitle("Average Daily Steps Weekdays Vs. Weekend") +
scale_x_datetime(labels = date_format("%H:%M",tz="EST"), breaks = date_breaks("2 hour")) +
scale_y_continuous("Average Steps Taken")
source('C:/Users/Lisa/version-control/RepData_PeerAssessment2/stormDataAnalysis.R', echo=TRUE)
reduced_stormData$cropDamage <- mapply(calamt, reduced_stormData$CROPDMG, reduced_stormData$CROPDMGEXP)
reduced_stormData$propDamage <- mapply(calamt, reduced_stormData$PROPDMG, reduced_stormData$PROPDMGEXP)
reduced_stormData$totalDamage <- reduced_stormData$propDamage + reduced_stormData$cropDamage
reduced_stormData$PROPDMG <- NULL
reduced_stormData$PROPDMGEXP <- NULL
reduced_stormData$CROPDMG <- NULL
reduced_stormData$CROPDMGEXP <- NULL
recent_stormData<- filter(reduced_stormData, year >= 1990)
fatality <- aggregate(FATALITIES ~ EVTCatagory, data=recent_stormData, FUN=sum)
fatality <- fatality %>% arrange(desc(FATALITIES))
injuries <- aggregate(INJURIES ~ EVTCatagory, data=recent_stormData, FUN=sum)
injuries <- injuries %>% arrange(desc(INJURIES))
humanDamage <- merge(fatality, injuries, by="EVTCatagory")
humanDamage
ggplot(data=humanDamage, aes(y=FATALITIES, x=reorder(EVTCatagory, -FATALITIES))) +
geom_bar(stat="identity", fill="red") +
scale_y_continuous("Number of Fatalities") +
ggtitle("Total Fatalities by Severe Weather in US from 1990-2011") +
xlab("Weather Event Type") +
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=humanDamage, aes(y=INJURIES, x=reorder(EVTCatagory,-INJURIES))) +
geom_bar(stat="identity", fill="orange") +
scale_y_continuous("Number of Injuries") +
ggtitle("Total Injuries by Severe Weather in US from 1990-2011") +
xlab("Weather Event Type") +
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
head(recent_stormData)
EconDamage <- aggregate(totalDamage~EVTCatagory, data=recent_stormData, FUN=sum)
EconDamage
EconDamage <- EconDamage %>% arrange(desc(totalDamage))
EconDamage
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=totalDamage)) +
geom_bar(stat="identity", fill="orange")
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=totalDamage)) +
geom_bar(stat="identity", fill="seagreen4")
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=totalDamage)) +
geom_bar(stat="identity", fill="seagreen4", binwidth = 1)
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=totalDamage)) +
geom_histogram(stat="identity", fill="seagreen4", binwidth = 1)
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=totalDamage)) +
geom_histogram()
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=totalDamage)) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars") +
xlab("Severe Wheater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=(totalDamage/10^6)) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars (million)") +
xlab("Severe Wheater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=(totalDamage/10^6))) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars (million)") +
xlab("Severe Wheater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=(totalDamage/10^6))) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars (million)") +
xlab("Severe Wheater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=(totalDamage/10^9))) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars (billion)") +
xlab("Severe Wheater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=(totalDamage/10^9))) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars (billion)") +
xlab("Severe Weater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=humanDamage, aes(y=FATALITIES, x=reorder(EVTCatagory, -FATALITIES))) +
geom_bar(stat="identity", fill="red") +
scale_y_continuous("Number of Fatalities") +
ggtitle("Total Fatalities by Severe Weather in US from 1990-2011") +
xlab("Weather Event Type") +
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=humanDamage, aes(y=INJURIES, x=reorder(EVTCatagory,-INJURIES))) +
geom_bar(stat="identity", fill="orange") +
scale_y_continuous("Number of Injuries") +
ggtitle("Total Injuries by Severe Weather in US from 1990-2011") +
xlab("Weather Event Type") +
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
ggplot(data=EconDamage, aes(x=reorder(EVTCatagory, -totalDamage), y=(totalDamage/10^9))) +
geom_bar(stat="identity", fill="seagreen4") +
scale_y_continuous("Total Economic Damage in US Dollars (billion)") +
xlab("Severe Weater Event Type") +
ggtitle("Total Economic Damage by Severe Weather in US from 1990-2011")+
theme(axis.text.x=element_text(angle=90, hjust=1), text=element_text(size=20))
dim(stormData)
hist(stormData$year, breaks=30)
humanDamage
